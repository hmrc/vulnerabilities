/*
 * Copyright 2023 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.vulnerabilities.model

import play.api.libs.functional.syntax.toFunctionalBuilderOps
import play.api.libs.json._

import java.time.Instant

case class VulnerableComponent(
  component: String,
  version: String
)

object VulnerableComponent:
  val format: Format[VulnerableComponent] =
    ( (__ \ "component").format[String]
    ~ (__ \ "version"  ).format[String]
    )(apply, pt => Tuple.fromProductTyped(pt))

case class DistinctVulnerability(
  vulnerableComponentName   : String,
  vulnerableComponentVersion: String,
  vulnerableComponents      : Seq[VulnerableComponent],
  id                        : String,
  score                     : Option[Double],
  summary                   : String,
  description               : String,
  fixedVersions             : Option[Seq[String]],
  references                : Seq[String],
  publishedDate             : Instant,
  firstDetected             : Option[Instant],
  assessment                : Option[String],
  curationStatus            : CurationStatus,
  ticket                    : Option[String]
)

object DistinctVulnerability:
  val apiFormat: Format[DistinctVulnerability] =
    given Format[VulnerableComponent] = VulnerableComponent.format
    ( (__ \ "vulnerableComponentName"   ).format[String]
    ~ (__ \ "vulnerableComponentVersion").format[String]
    ~ (__ \ "vulnerableComponents"      ).format[Seq[VulnerableComponent]]
    ~ (__ \ "id"                        ).format[String]
    ~ (__ \ "score"                     ).formatNullable[Double]
    ~ (__ \ "summary"                   ).format[String]
    ~ (__ \ "description"               ).format[String]
    ~ (__ \ "fixedVersions"             ).formatNullable[Seq[String]]
    ~ (__ \ "references"                ).format[Seq[String]]
    ~ (__ \ "publishedDate"             ).format[Instant]
    ~ (__ \ "firstDetected"             ).formatNullable[Instant]
    ~ (__ \ "assessment"                ).formatNullable[String]
    ~ (__ \ "curationStatus"            ).format[CurationStatus]
    ~ (__ \ "ticket"                    ).formatNullable[String]
    )(apply, pt => Tuple.fromProductTyped(pt))

case class VulnerabilityOccurrence(
  service                   : String,
  serviceVersion            : String,
  componentPathInSlug       : String,
  dependency                : Dependency,
  teams                     : Seq[TeamName],
  envs                      : Seq[String],
  vulnerableComponentName   : String,
  vulnerableComponentVersion: String
)

object VulnerabilityOccurrence:
  val reads: Format[VulnerabilityOccurrence] =
    ( (__ \ "service"                   ).format[String]
    ~ (__ \ "serviceVersion"            ).format[String]
    ~ (__ \ "componentPathInSlug"       ).format[String]
    ~ (__ \ "dependency"                ).format[Dependency](Dependency.format2)
    ~ (__ \ "teams"                     ).format[Seq[TeamName]]
    ~ (__ \ "envs"                      ).format[Seq[String]]
    ~ (__ \ "vulnerableComponentName"   ).format[String]
    ~ (__ \ "vulnerableComponentVersion").format[String]
    )(apply, pt => Tuple.fromProductTyped(pt))

case class VulnerabilitySummary(
  distinctVulnerability: DistinctVulnerability,
  occurrences          : Seq[VulnerabilityOccurrence],
  teams                : Seq[TeamName],
  generatedDate        : Instant
)

object VulnerabilitySummary:
  val apiFormat: Format[VulnerabilitySummary] =
    given Format[VulnerabilityOccurrence] = VulnerabilityOccurrence.reads
    ( (__ \ "distinctVulnerability").format[DistinctVulnerability](DistinctVulnerability.apiFormat)
    ~ (__ \ "occurrences"          ).format[Seq[VulnerabilityOccurrence]]
    ~ (__ \ "teams"                ).format[Seq[TeamName]]
    ~ (__ \ "generatedDate"        ).format[Instant]
    ) (apply, pt => Tuple.fromProductTyped(pt))
