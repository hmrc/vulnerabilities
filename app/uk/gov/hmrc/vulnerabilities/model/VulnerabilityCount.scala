/*
 * Copyright 2023 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.vulnerabilities.model

import play.api.libs.functional.syntax.toFunctionalBuilderOps
import play.api.libs.json.{OFormat, Writes, __}

case class VulnerabilityCount(
  service       : ServiceName
, flag          : SlugInfoFlag
, curationStatus: CurationStatus
, count         : Int
)

object VulnerabilityCount {
  val mongoFormat: OFormat[VulnerabilityCount] =
    ( (__ \ "service"       ).format[ServiceName](ServiceName.format)
    ~ (__ \ "flag"          ).format[SlugInfoFlag](SlugInfoFlag.format)
    ~ (__ \ "curationStatus").format[CurationStatus](CurationStatus.format)
    ~ (__ \ "count"         ).format[Int]
    )(apply, pt => Tuple.fromProductTyped(pt))
}

case class TotalVulnerabilityCount(
  service             : ServiceName
, actionRequired      : Int
, noActionRequired    : Int
, investigationOngoing: Int
, uncurated           : Int
)

object TotalVulnerabilityCount {
  val writes: Writes[TotalVulnerabilityCount] =
    ( (__ \ "service"             ).write[ServiceName](ServiceName.format)
    ~ (__ \ "actionRequired"      ).write[Int]
    ~ (__ \ "noActionRequired"    ).write[Int]
    ~ (__ \ "investigationOngoing").write[Int]
    ~ (__ \ "uncurated"           ).write[Int]
    )(pt => Tuple.fromProductTyped(pt))
}
