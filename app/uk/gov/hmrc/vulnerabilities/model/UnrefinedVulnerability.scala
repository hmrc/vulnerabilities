/*
 * Copyright 2022 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.vulnerabilities.model

import play.api.libs.functional.syntax.{toFunctionalBuilderOps, unlift}
import play.api.libs.json.{OFormat, __}
import uk.gov.hmrc.mongo.play.json.formats.MongoJavatimeFormats

import java.time.Instant

//Having an intermediate case class that we get from Mongo and then work with, rather than going directly from RawReport -> DistinctVulnerability
//This means a significantly less complex aggregation pipeline, without having to force nested reduces after multiple splits etc.

case class UnrefinedVulnerabilitySummary(
   distinctVulnerability: UnrefinedDistinctVulnerability,
   occurrences          : Seq[UnrefinedVulnerabilityOccurrence],
   id                   : String,
   generatedDate        : Instant,
   score                : Option[Double]
 )

object UnrefinedVulnerabilitySummary {
  val reads: OFormat[UnrefinedVulnerabilitySummary] = {
    implicit val dvf = UnrefinedDistinctVulnerability.reads
    implicit val vof = UnrefinedVulnerabilityOccurrence.reads
    implicit val instantFormat = MongoJavatimeFormats.instantFormat


    ((__ \ "distinctVulnerability").format[UnrefinedDistinctVulnerability]
      ~ (__ \ "occurrences"       ).format[Seq[UnrefinedVulnerabilityOccurrence]]
      ~ (__ \ "_id"               ).format[String]
      ~ (__ \ "generatedDate"     ).format[Instant]
      ~ (__ \ "score"   ).formatNullable[Double]
      ) (apply, unlift(unapply))
  }
}

case class UnrefinedVulnerabilityOccurrence(
  vulnComponent        : String,
  path                 : String,
  componentPhysicalPath: String
)

object UnrefinedVulnerabilityOccurrence {
  val reads: OFormat[UnrefinedVulnerabilityOccurrence] = {
    ( (__ \ "vulnComponent").format[String]
      ~ (__ \ "path"       ).format[String]
      ~ (__ \ "componentPhysicalPath").format[String]
      )(apply, unlift(unapply))
  }
}

case class UnrefinedDistinctVulnerability(
    vulnerableComponent   : String,
    description           : String,
    fixedVersions         : Option[Seq[String]],
    references            : Seq[String],
    publishedDate         : Instant
  )

object UnrefinedDistinctVulnerability {

  val reads: OFormat[UnrefinedDistinctVulnerability] = {
    implicit val instantFormat = MongoJavatimeFormats.instantFormat

    ( (__ \ "vulnerable_component").format[String]
      ~ (__ \ "description"       ).format[String]
      ~ (__ \ "fixed_versions"    ).formatNullable[Seq[String]]
      ~ (__ \ "references"        ).format[Seq[String]]
      ~ (__ \ "published"         ).format[Instant]
      )(apply, unlift(unapply))
  }
}
