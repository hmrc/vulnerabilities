/*
 * Copyright 2022 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.vulnerabilities.model

import play.api.libs.functional.syntax.{toFunctionalBuilderOps, unlift}
import play.api.libs.json._
import uk.gov.hmrc.mongo.play.json.formats.MongoJavatimeFormats

import java.time.Instant

case class Vulnerability(
    service: String,
    serviceVersion: String,
    vulnerableComponentName: String,
    vulnerableComponentVersion: String,
    componentPathInSlug: String,
    id: String,
    score: Double,
    description: String,
    requiresAction: Boolean,
    assessment: String,
    lastReviewed: Instant,
    teams: Seq[String],
    references: Seq[String],
    published: Instant,
    scanned: Instant
)

object Vulnerability{

  val apiFormat: OFormat[Vulnerability] = {

    ( (__ \ "service"                     ).format[String]
      ~ (__ \ "serviceVersion"            ).format[String]
      ~ (__ \ "vulnerableComponentName"   ).format[String]
      ~ (__ \ "vulnerableComponentVersion").format[String]
      ~ (__ \ "componentPathInSlug"       ).format[String]
      ~ (__ \ "id"                        ).format[String]
      ~ (__ \ "score"                     ).format[Double]
      ~ (__ \ "description"               ).format[String]
      ~ (__ \ "requiresAction"            ).format[Boolean]
      ~ (__ \ "assessment"                ).format[String]
      ~ (__ \ "lastReviewed"              ).format[Instant]
      ~ (__ \ "teams"                     ).format[Seq[String]]
      ~ (__ \ "references"                ).format[Seq[String]]
      ~ (__ \ "published"                 ).format[Instant]
      ~ (__ \ "scanned"                   ).format[Instant]
      )(apply, unlift(unapply))
  }

  val mongoFormat: OFormat[Vulnerability] = {
    implicit val instantFormat = MongoJavatimeFormats.instantFormat

    ( (__ \ "service"                     ).format[String]
      ~ (__ \ "serviceVersion"            ).format[String]
      ~ (__ \ "vulnerableComponentName"   ).format[String]
      ~ (__ \ "vulnerableComponentVersion").format[String]
      ~ (__ \ "componentPathInSlug"       ).format[String]
      ~ (__ \ "id"                        ).format[String]
      ~ (__ \ "score"                     ).format[Double]
      ~ (__ \ "description"               ).format[String]
      ~ (__ \ "requiresAction"            ).format[Boolean]
      ~ (__ \ "assessment"                ).format[String]
      ~ (__ \ "lastReviewed"              ).format[Instant]
      ~ (__ \ "teams"                     ).format[Seq[String]]
      ~ (__ \ "references"                ).format[Seq[String]]
      ~ (__ \ "published"                 ).format[Instant]
      ~ (__ \ "scanned"                   ).format[Instant]
      )(apply, unlift(unapply))
  }
}
