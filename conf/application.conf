# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = vulnerabilities

# Http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.vulnerabilities.config.Module"

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

play.modules.enabled += "uk.gov.hmrc.vulnerabilities.VulnerabilitiesModule"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300
}

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/vulnerabilities"
}

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    releases-api {
      host = localhost
      port = 8008
    }

    teams-and-repositories {
      host = localhost
      port = 9015
    }
  }
}

data.refresh-cutoff = 1 day
data.transformation-cutoff = 30 hours #This should always be higher than the data.refresh-cutoff to prevent a missing data bug outlined in BDOG-2723

scheduler.initialDelay = 10 seconds
scheduler.interval = 3 hours
scheduler.enabled = false

timeline.processing-cutoff = 28 days

timeline.scheduler.initialDelay = 10 seconds
timeline.scheduler.interval = 7 days
timeline.scheduler.enabled = false

test.integration = false

xray.url               = "PLACEHOLDER"
xray.token             = "redacted"
xray.username          = "PLACEHOLDER"
xray.reports.retention = 1 day

aws.sqs {
  enabled = false
  deployment {
    queueUrl            = null
    maxNumberOfMessages = 1
    waitTimeSeconds     = 20
  }
  deploymentDeadLetter {
    queueUrl            = null
    maxNumberOfMessages = 10
    waitTimeSeconds     = 20
  }
}
